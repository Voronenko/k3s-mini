version: '3.4'
services:
  traefik:
    image: traefik:v2.1.4
    ports:
      - 80:80
      - 443:443
      # - 8080:8080
      # - 5432:5432
      # - 27017:27017
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      labels: []
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_certs:/certs
      - ./traefik_conf:/conf
      - ./kubernetes_data:/var/run/secrets/kubernetes.io/serviceaccount
    restart: always
#       --docker.swarmmode
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/conf/"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.mongo.address=:27017"
      - "--entrypoints.postgres.address=:5432"
      - "--log.level=DEBUG"
      - "--accessLog"
      - "--api"
      - "--metrics"
      - "--metrics.prometheus"
      - "--providers.docker.network=traefik-public"

      - "--providers.kubernetescrd.endpoint=https://192.168.3.100:6443"
      - "--providers.kubernetescrd.certauthfilepath=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      - "--providers.kubernetescrd=true"

    networks:
      - default
      - traefik-public
#    labels:
#      - 'traefik.http.routers.http-catchall.rule: "hostregexp(`{host:.+}`)"'
#      - 'traefik.http.routers.http-catchall.entrypoints: "web"'
#      - 'traefik.http.routers.http-catchall.middlewares: "redirect-to-https@docker"'
#      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"'
#  whoami:
#    image: "containous/whoami"
#    container_name: "simple-service"
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.whoami.rule=Host(`whoami.k.voronenko.net`)"
#      - "traefik.http.routers.whoami.entrypoints=web"
#
##      - "traefik.http.middlewares.traefik-auth.basicauth.users=USER:PASSWORD"
##      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
##      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"

#      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
#      - "traefik.http.routers.traefik-secure.rule=Host(`whoami.k.voronenko.net`)"
##      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
#      - "traefik.http.routers.traefik-secure.tls=true"
  portainer:
    image: portainer/portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`docker.k.voronenko.net`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.portainer-secure.rule=Host(`docker.k.voronenko.net`)"
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.tls=true"
      # Uncomment this label if your Traefik instance is using a specific Docker network and replace the network name
      # This is not necessary if you set your default network in Traefik config/parameters
      # - "traefik.docker.network=your-traefik-network-name"
volumes:
  portainer_data:
networks:
  traefik-public:
    external: true
